#Trial params
num_steps: 5000000
summary_step: 1000
test: False
hist_len: 4
obs_size: [84, 84, 1] 
burnin: 50000
concurrent_batches: 125
minibatch_size: 128
train_step: 4
discount: 0.99
n_z: 64

env_params:
    frame_skip: 4
    max_start_nullops: 0
    death_ends_episode: False
    train_epoch_length: 50000
    test_epoch_length: 10000
    experiments:
        pong:
            game: pong
            crop_top: 34
            crop_bottom: 15
        breakout:
            game: breakout
            crop_top: 32
            crop_bottom: 13
        space_invaders:
            game: space_invaders
            crop_top: 20
            crop_bottom: 14
        ms_pacman:
            game: ms_pacman
            crop_top: 2
            crop_bottom: 38

model_params:
    learning_rate: 0.0002
    tau_period: 1
    tau_min: 0.6667
    tau_max: 0.6667
    gpu_frac: 
    beta_prior: 1
    beta_reward: 0
    act_func: relu
    prior_tau: 0.5
    straight_through: False
    weight_summaries: False
    grad_norm_clip: 100
    tf_debug: False
    net_arch: 5

agent_params:
    max_replay_size: 1000000
    epsilon_period: 1000000
    min_epsilon: 0.1
    test_epsilon: 0.05
    exp_eps_decay: False
    pri_cutoff: 0.00005
    delete_old_episodes: False
    init_capacity: 1000000

net_arches:
    1:
        #Default
        #[Channels, filter side, stride] ... [Units]
        encoder: [[32, 8, 2], [64, 4, 2], [128, 3, 2], 512]
        #[Units] ... [Channels, filter side, stride] ... [filter side, stride]
        decoder: [512, [256, 4, 2], [128, 4, 2], [64, 4, 2], [4, 2]]
        prediction: [512, 256, 512]
    2:
        #NATURE encoder
        #[Channels, filter side, stride] ... [Units]
        encoder: [[32, 8, 4], [64, 4, 2], [64, 3, 1], 512]
        #[Units] ... [Channels, filter side, stride] ... [filter side, stride]
        decoder: [512, [256, 4, 2], [128, 4, 2], [64, 4, 2], [4, 2]]
        prediction: [512, 256, 512]
    3:
        #Low-unit predictor
        #[Channels, filter side, stride] ... [Units]
        encoder: [[32, 8, 2], [64, 4, 2], [128, 3, 2], 512]
        #[Units] ... [Channels, filter side, stride] ... [filter side, stride]
        decoder: [256, [64, 4, 2], [64, 4, 2], [32, 4, 2], [4, 2]]
        prediction: [256, 128, 256]
    4:
        #Uneven encoder
        #[Channels, filter side, stride] ... [Units]
        encoder: [[32, 8, 4], [64, 4, 2], [128, 3, 1], 512]
        #[Units] ... [Channels, filter side, stride] ... [filter side, stride]
        decoder: [256, [64, 4, 2], [64, 4, 2], [32, 4, 2], [4, 2]]
        prediction: [512, 256, 512]
    5:
        #NATURE encoder and simple decoder
        #[Channels, filter side, stride] ... [Units]
        encoder: [[32, 8, 4], [64, 4, 2], [64, 3, 1], 512]
        #[Units] ... [Channels, filter side, stride] ... [filter side, stride]
        decoder: [256, [64, 4, 2], [64, 4, 2], [32, 4, 2], [4, 2]]
        prediction: [512, 256, 512]
    6:
        #4 & 2
        #[Channels, filter side, stride] ... [Units]
        encoder: [[32, 8, 4], [64, 4, 2], [64, 3, 1], 512]
        #[Units] ... [Channels, filter side, stride] ... [filter side, stride]
        decoder: [256, [64, 4, 2], [64, 4, 2], [32, 4, 2], [4, 2]]
        prediction: [256, 128, 256]
    7:
        #Low-channel decoder
        #[Channels, filter side, stride] ... [Units]
        encoder: [[32, 8, 2], [64, 4, 2], [128, 3, 2], 512]
        #[Units] ... [Channels, filter side, stride] ... [filter side, stride]
        decoder: [128, [64, 4, 2], [64, 4, 2], [32, 4, 2], [4, 2]]
        prediction: [512, 256, 512]
    8:
        #All
        #[Channels, filter side, stride] ... [Units]
        encoder: [[32, 8, 4], [64, 4, 2], [64, 3, 1], 512]
        #[Units] ... [Channels, filter side, stride] ... [filter side, stride]
        decoder: [128, [64, 4, 2], [64, 4, 2], [32, 4, 2], [4, 2]]
        prediction: [256, 128, 256]